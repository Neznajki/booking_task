version: "3.1"
services:
  booking-container:
    hostname: booking-service
    container_name: booking-container
    build:
      ./.docker
    ports:
      - '8080:8080'
    expose:
      # Opens port 8080 on the container
      - '8080'
    volumes:
      - ./:/project:cached

    depends_on:
      - mysql-booking
      - cache-booking

  cache-booking:
    hostname: cache-booking
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning

  mysql-booking:
    hostname: mysql-booking
    image: library/mysql:8.0
    container_name: mysql-booking
    # restart can be removed
    environment:
      MYSQL_DATABASE: 'booking'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: '1'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'p1assword'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      # define cache folder for database metadata (to preserve state)
      - .docker/meta/db:/var/lib/mysql:cached

  mysql-test:
    hostname: mysql-test
    image: library/mysql:8.0
    container_name: mysql-test
    environment:
      MYSQL_DATABASE: 'booking'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: '1'
      MYSQL_ROOT_PASSWORD: 'p1assword'
    ports:
      - '3307:3306'
    volumes:
      - .docker/meta/test-db:/var/lib/mysql:cached